name: Build with vcpkg

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/**
      - src/**
      - CMakeLists.txt
  pull_request:
    branches:
      - main

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.cxx }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}
    runs-on: ${{ matrix.os }}-${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        name: [windows-msvc]  # Tylko Windows
        buildtype: [Release]  # Tylko Release
        luajit: [on]  # Tylko z LuaJIT
        include:
          - name: windows-msvc
            os: windows
            os-version: latest
            cxx: cl.exe
            cc: cl.exe
            triplet: x64-windows
            packages: >
              boost-iostreams boost-asio boost-system boost-variant boost-lockfree boost-filesystem boost-uuid
              glew luajit libogg libvorbis openal-soft opengl openssl physfs zlib

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Install dependencies
        run: |
          ./vcpkg/vcpkg install ${{ matrix.packages }}

      - name: Build with CMake
        run: |
          mkdir -p ${{ runner.workspace }}/build
          cd ${{ runner.workspace }}/build
          cmake -G Ninja -DCMAKE_BUILD_TYPE="${{ matrix.buildtype }}" -DLUAJIT="${{ matrix.luajit }}" ..
          cmake --build . --config ${{ matrix.buildtype }}

      - name: Upload artifact binary (exe)
        uses: actions/upload-artifact@v4
        with:
          name: otclient-${{ matrix.name }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}-${{ github.sha }}
          path: ${{ runner.workspace }}/build/otclient.exe

      - name: Upload artifact binary (dlls)
        uses: actions/upload-artifact@v4
        with:
          name: otclient-${{ matrix.name }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}-${{ github.sha }}
          path: ${{ runner.workspace }}/build/*.dll